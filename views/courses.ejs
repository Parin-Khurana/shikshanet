<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manage Courses</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    @import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: "Geist", sans-serif; background-color: #FBF9F7; color: #000; line-height: 1.5; }
    .container { max-width: 1200px; margin: 0 auto; padding: 0 24px; }
    .navbar { background-color: #FBF9F7; border-bottom: 1px solid #FBF9F7; padding: 1rem 2rem; box-shadow: 0 2px 4px rgba(0,0,0,0.4); width: 100%; }
    .navbar-brand { font-weight: bold; font-size: 1.25rem; }
    .nav-link { color: #333; margin: 0 1rem; }
    .profile-section { display: flex; align-items: center; gap: 0.5rem; }
    .profile-icon { width: 32px; height: 32px; background-color: #333; border-radius: 50%; }
    .main { padding: 32px 0; }
    .page-header { margin-bottom: 32px; }
    .page-title { font-size: 50px; font-weight: 700; margin-bottom: 8px; margin-left: 0; }
    .page-description { color: #737373; }
    .section-title { font-size: 24px; font-weight: 600; margin-bottom: 16px; }
    .course-table { width: 100%; border-collapse: collapse; font-size: 14px; color: #000; }
    .course-table thead { background-color: #000; color: #fff; }
    .course-table th, .course-table td { padding: 12px 16px; text-align: left; border-bottom: 1px solid #E5E7EB; }
    .status-badge { display: inline-flex; align-items: center; gap: 4px; padding: 4px 8px; border-radius: 6px; font-size: 12px; font-weight: 500; }
    .active-status { background-color: #D1FAE5; color: #065F46; border: 1px solid #34D399; }
    .btn-primary { background-color: #000; color: #fff; border-radius: 6px; padding: 8px 32px; }
    .btn-primary:hover { background-color: #262626; }
    .btn-secondary { background-color: #fff; color: #000; border: 1px solid #e5e5e5; padding: 8px 32px; }
    .btn-secondary:hover { background-color: #f5f5f5; }
    .form-group { display: flex; flex-direction: column; gap: 8px; margin-bottom: 16px; }
    .input, .select, .textarea { width: 100%; padding: 8px 12px; font-size: 14px; border: 1px solid #e5e5e5; border-radius: 15px; background-color: #fff; }
    .input:focus, .select:focus, .textarea:focus { outline: none; border-color: #000; }
    .select{appearance: none;
  background-color: #fff; /* white input background */
  border: 1px solid #e5e5e5;
  border-radius: 15px;
  padding: 8px 36px 8px 12px; /* keep space for arrow */
  background-image: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M2 4L6 8L10 4' stroke='%23737373' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  color: #000; /* text color */
};
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
      <a class="navbar-brand" href="studentdash.html">Logo</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mx-auto">
          <li class="nav-item"><a class="nav-link" href="/dash">Home</a></li>
          <li class="nav-item"><a class="nav-link active" href="/class">Classes</a></li>
          <li class="nav-item"><a class="nav-link" href="/test">Tests</a></li>
          <li class="nav-item"><a class="nav-link" href="/browse">Learn</a></li>
          <li class="nav-item"><a class="nav-link" href="/info">Information</a></li>
        </ul>
        <div class="profile-section">
          <span><%= teacher.username %></span>
          <div class="profile-icon"></div>
        </div>
      </div>
    </div>
  </nav>

  <main class="main">
    <div class="container">
      <div class="page-header">
        <h1 class="page-title">Manage Courses</h1>
        <p class="page-description">Create, organize, and track your courses.</p>
      </div>

      <!-- Add Course Form -->
      <div class="card mb-4" style="padding: 24px; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
        <h3 style="margin-bottom: 20px; font-size: 20px; font-weight: 600;">Add New Course</h3>
        <form id="add-course-form" class="mb-4">
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
            <div class="form-group">
              <label for="course-name">Course Name</label>
              <input type="text" id="course-name" name="courseName" class="input" required>
            </div>
            <div class="form-group">
              <label for="section-select">Select Section</label>
              <select id="section-select" name="sectionId" class="select" required>
                <% if (teacher && teacher.sections && teacher.sections.length) { %>
                  <% teacher.sections.forEach((section, index) => { %>
                    <% 
                      const sectionName = section.name || section.sectionName || 'Unnamed';
                    %>
                    <option value="<%= index %>" style="color: black;"><%= sectionName %></option>
                  <% }) %>
                <% } else { %>
                  <option disabled>No sections available</option>
                <% } %>
              </select>
            </div>
          </div>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
            <div class="form-group">
              <label for="course-desc">Description</label>
              <textarea id="course-desc" name="description" class="textarea" required style="min-height: 80px;"></textarea>
            </div>
            <div class="form-group">
              <label for="course-status">Status</label>
              <select id="course-status" name="status" class="select" required>
                <option value="active">Active</option>
                <option value="completed">Completed</option>
              </select>
            </div>
          </div>
          <button type="submit" class="btn btn-primary">Add Course</button>
        </form>
        <div id="course-message" style="margin-top: 16px;"></div>
      </div>

      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
        <h2 class="section-title">Your Courses</h2>
      </div>

      <!-- Courses Table -->
      <div class="card course-table-card">
        <table class="course-table">
          <thead>
            <tr>
              <th>Course Name</th>
              <th>Class</th>
              <th>Description</th>
              <th>No. of Students</th>
              <th>Status</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <% teacher.sections.forEach((section, sectionIndex) => { %>
              <% if(section.courses) { %>
                <% section.courses.forEach((course, courseIndex) => { %>
                  <tr>
                    <td><%= course.courseName %></td>
                    <td><%= section.sectionName %></td>
                    <td><%= course.description %></td>
                    <td><%= section.students ? section.students.length : 0 %></td>
                    <td>
                      <div class="status-badge <%= course.status === 'active' ? 'active-status' : '' %>">
                        <%= course.status.charAt(0).toUpperCase() + course.status.slice(1) %>
                      </div>
                    </td>
                    <td>
                      <button type="button" 
                              class="btn btn-sm btn-danger" 
                              onclick="deleteCourse('<%= sectionIndex %>', '<%= courseIndex %>', '<%= course.courseName %>')"
                              style="background-color: #dc3545; color: white; border: none; padding: 6px 12px; border-radius: 4px; cursor: pointer;">
                        Delete
                      </button>
                    </td>
                  </tr>
                <% }) %>
              <% } %>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </main>

  <script>
    // Handle course form submission
    document.getElementById('add-course-form').addEventListener('submit', async function(e) {
      e.preventDefault();
      console.log('=== FRONTEND: FORM SUBMISSION START ===');
      
      const formData = new FormData(this);
      const messageDiv = document.getElementById('course-message');
      
      // Debug: Log form data
      console.log('üìù Form data being sent:');
      for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: ${value}`);
      }
      
      try {
        messageDiv.innerHTML = '<div style="padding: 12px; background: #e3f2fd; color: #1976d2; border-radius: 4px; margin-top: 16px;">Adding course...</div>';
        
        console.log('üåê Sending request to /add-course...');
        const response = await fetch('/add-course', {
          method: 'POST',
          body: formData
        });
        
        console.log('üì° Response received:', response.status, response.statusText);
        
        const result = await response.json();
        console.log('üìÑ Response data:', result);
        
        if (result.success) {
          console.log('‚úÖ Course added successfully!');
          messageDiv.innerHTML = `<div style="padding: 12px; background: #e8f5e8; color: #2e7d32; border-radius: 4px; margin-top: 16px;">‚úÖ ${result.message}</div>`;
          // Clear the form
          this.reset();
          // Reload the page to show the new course
          setTimeout(() => {
            console.log('üîÑ Reloading page...');
            window.location.reload();
          }, 1500);
        } else {
          console.log('‚ùå Course addition failed:', result.error);
          let errorMessage = result.error;
          
          // If it's a section not found error, add a refresh button
          if (result.error && result.error.includes('outdated')) {
            errorMessage += '<br><button onclick="window.location.reload()" style="margin-top: 8px; padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">Refresh Page</button>';
          }
          
          messageDiv.innerHTML = `<div style="padding: 12px; background: #ffebee; color: #c62828; border-radius: 4px; margin-top: 16px;">‚ùå ${errorMessage}</div>`;
        }
        console.log('=== FRONTEND: FORM SUBMISSION END ===');
      } catch (error) {
        console.error('‚ùå Frontend error:', error);
        messageDiv.innerHTML = `<div style="padding: 12px; background: #ffebee; color: #c62828; border-radius: 4px; margin-top: 16px;">‚ùå Error: ${error.message}</div>`;
      }
    });

    // Handle course deletion
    function deleteCourse(sectionId, courseId, courseName) {
      console.log('=== FRONTEND: DELETE COURSE START ===');
      console.log('üóëÔ∏è Delete request:', { sectionId, courseId, courseName });
      
      if (confirm(`Are you sure you want to delete the course "${courseName}"?`)) {
        const formData = new FormData();
        formData.append('sectionId', sectionId);
        formData.append('courseId', courseId);
        
        console.log('üìù Delete form data:');
        for (let [key, value] of formData.entries()) {
          console.log(`  ${key}: ${value}`);
        }
        
        console.log('üåê Sending delete request to /teacher/course/delete...');
        fetch('/teacher/course/delete', {
          method: 'POST',
          body: formData
        })
        .then(response => {
          console.log('üì° Delete response received:', response.status, response.statusText);
          return response.json();
        })
        .then(result => {
          console.log('üìÑ Delete response data:', result);
          if (result.success) {
            console.log('‚úÖ Course deleted successfully!');
            alert('Course deleted successfully!');
            window.location.reload();
          } else {
            console.log('‚ùå Course deletion failed:', result.error);
            alert('Error deleting course: ' + result.error);
          }
        })
        .catch(error => {
          console.error('‚ùå Delete error:', error);
          alert('Error deleting course: ' + error.message);
        });
      }
      console.log('=== FRONTEND: DELETE COURSE END ===');
    }
  </script>

</body>
</html>
