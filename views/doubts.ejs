<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Student Doubts</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    @import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");

* {
margin: 0;
padding: 0;
box-sizing: border-box;
}

body {
font-family: "Geist", sans-serif;
background-color: #FBF9F7;
color: #000000;
line-height: 1.5;
overflow: hidden;
}


.container {
max-width: 1650px;
margin: 0 auto;
padding: 0 24px;
}

.navbar {
background-color: #FBF9F7;
border-bottom: 1px solid #FBF9F7;
padding: 1rem 2rem;
box-shadow: 0 2px 4px rgba(0,0,0,0.4);
width: 100%;
}
.navbar-brand {
font-weight: bold;
font-size: 1.25rem;
}
.nav-link {
color: #333;
margin: 0 1rem;
}
.profile-section {
display: flex;
align-items: center;
gap: 0.5rem;
}
.profile-icon {
width: 32px;
height: 32px;
background-color: #333;
border-radius: 50%;
}

.main {
padding: 32px 0;
transition: filter 0.3s ease;
}

.main.blurred {
filter: blur(5px);

}

.page-header {
margin-bottom: 32px;
}

.page-title {
font-size: 50px;
font-weight: 700;
margin-bottom: 8px;
}

.page-description {
color: #737373;
}

.doubt-stats-container {
display: grid;
grid-template-columns: repeat(3, 1fr);
gap: 24px;
margin-bottom: 40px;
}

.stat-card {
background-color: #ffffff;
border-radius: 8px;
padding: 24px;
box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
border-top: 6px solid transparent; 
}

.orange-border {
border-top-color: #f97316;
}
.green-border {
border-top-color: #22c55e;
}

.stat-card-header {
display: flex;
justify-content: space-between;
align-items: center;
margin-bottom: 16px;
}

.stat-label {
font-size: 14px;
color: #000000;
font-weight: 500;
}

.icon-placeholder {
width: 32px;
height: 32px;
display: flex;
align-items: center;
justify-content: center;
border-radius: 4px;
}

.orange-bg {
background-color: #fef3e5;
color: #f97316;
}

.green-bg {
background-color: #ecfdf5;
color: #22c55e;
}

.stat-value {
font-size: 32px;
font-weight: 700;
color: #000000;
line-height: 1.2;
}

.doubts-list-container {
display: flex;
flex-direction: column;
gap: 16px;
max-height: 60vh; 
overflow-y: auto; 
padding-right: 12px; 
}

.doubts-list-container::-webkit-scrollbar {
width: 8px;
}

.doubts-list-container::-webkit-scrollbar-thumb {
background-color: #d4d4d8;
border-radius: 10px;
}

.doubts-list-container::-webkit-scrollbar-track {
background-color: #f5f5f5;
border-radius: 10px;
}

.doubt-item {
display: flex;
justify-content: space-between;
align-items: center;
padding: 16px 24px;
background-color: #ffffff;
border-radius: 8px;
box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
border-left: 6px solid #f97316; 
}

.in-progress-item {
border-left-color: #f97316; 
}

.resolved-item {
border-left-color: #22c55e; 
}

.doubt-content {
flex: 1;
margin-right: 24px;
}

.doubt-title {
font-size: 18px;
font-weight: 600;
color: #000000;
margin-bottom: 4px;
}

.doubt-text {
font-size: 14px;
color: #737373;
margin-bottom: 12px;
}

.doubt-meta {
display: flex;
gap: 16px;
font-size: 12px;
}

.meta-label {
color: #737373;
font-weight: 400;
}

.meta-value {
color: #000000;
font-weight: 500;
margin-right: 16px;
}

.doubt-actions {
display: flex;
flex-direction: column;
align-items: flex-end;
gap: 8px;
flex-shrink: 0;
}

.status-tag {
padding: 4px 12px;
border-radius: 9999px;
font-size: 12px;
font-weight: 600;
}

.pending-tag {
background-color: #fef2f2;
color: #ef4444;
border: 1px solid #fecaca;
}

.in-progress-tag {
background-color: #fffbeb;
color: #f59e0b;
border: 1px solid #fde68a;
}

.resolved-tag {
background-color: #ecfdf5;
color: #22c55e;
border: 1px solid #a7f3d0;
}

.view-details-btn {
padding: 8px 16px;
font-size: 14px;
font-weight: 500;
border: 1px solid #e5e5e5;
border-radius: 6px;
background-color: #ffffff;
cursor: pointer;
transition: all 0.2s;
color: #000000;
}

.view-details-btn:hover {
background-color: #f5f5f5;
}

.modal-overlay {
position: fixed;
top: 0;
left: 0;
width: 100%;
height: 100%;
background-color: rgba(0, 0, 0, 0.5); 
display: none; 
justify-content: center;
align-items: center;
z-index: 1000;
}

.modal-dialog {
background-color: #ffffff;
border-radius: 16px;
box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3); 
width: 90%;
max-width: 500px;
max-height: 100vh;
overflow-y: auto;
padding: 0;
animation: fadeIn 0.3s ease-out;
position: relative;
}

@keyframes fadeIn {
from {
opacity: 0;
transform: scale(0.95);
}
to {
opacity: 1;
transform: scale(1);
}
}

.modal-header {
padding: 24px 24px 20px 24px;
border-bottom: none;
position: relative;
}

#modal-title {
font-size: 20px;
font-weight: 600;
color: #000000;
padding-right: 40px;
}

.close-btn {
position: absolute;
top: 20px;
right: 20px;
background-color: #f5f5f5;
border: none;
width: 32px;
height: 32px;
border-radius: 50%;
cursor: pointer;
display: flex;
align-items: center;
justify-content: center;
transition: background-color 0.2s;
padding: 0;

}

.close-btn:hover {
background-color: #e5e5e5;
}

.close-btn svg {
width: 16px;
height: 16px;
color: #333;
}

.modal-body {
padding: 0 24px 24px 24px;
}

.student-info-row {
display: flex;
justify-content: space-between;
align-items: center;
margin-bottom: 12px;
}

.student-info {
display: flex;
align-items: center;
gap: 8px;
}

.info-label-inline {
font-size: 13px;
color: #737373;
font-weight: 400;
}

.info-value-inline {
font-size: 13px;
color: #000000;
font-weight: 500;
}

.class-info {
display: flex;
align-items: center;
gap: 8px;
}

.subject-section {
margin-bottom: 16px;

}

.subject-label {
font-size: 13px;
color: #737373;
font-weight: 400;
display: inline;
margin-bottom: 5px;
}

.subject-value {
font-size: 14px;
color: #000000;
font-weight: 500;

}

.description-card {
background-color: #F0F0F0;
border-radius: 15px;
box-shadow: 0px 4px 2px -1px rgba(0, 0, 0, 0.25);
border-radius: 15px;
padding: 16px;
margin-bottom: 20px;
}

.description-label {
font-size: 13px;
color: #737373;
font-weight: 400;
display: block;
margin-bottom: 8px;
}

.description-text {
font-size: 14px;
color: #000000;
line-height: 1.6;
}
.line-div {
  	width: 70%;
    margin: 0 auto;
  	height: 0.063rem;
  	position: relative;
  	filter: blur(1px) drop-shadow(0px 4px 43.1px rgba(0, 0, 0, 0.25));
  	border-top: 1px solid rgba(25, 0, 0, 0.54);
  	box-sizing: border-box;
}


.reply-section {
margin-top: 20px;
}

.reply-label {
font-size: 13px;
color: #737373;
font-weight: 400;
display: block;
margin-bottom: 10px;
}

.reply-input {
width: 100%;
min-height: 80px;
padding: 12px;
border: 1px solid #e5e5e5;
border-radius: 8px;
font-family: "Geist", sans-serif;
font-size: 14px;
resize: vertical;
background-color: #F0F0F0;
transition: border-color 0.2s;
}

.reply-input:focus {
outline: none;
border-color: #000000;
}

.reply-input::placeholder {
color: #a3a3a3;
}

.send-reply-btn {
width: 100%;
padding: 12px;
background-color: #000000;
color: #ffffff;
border: none;
border-radius: 8px;
font-size: 14px;
font-weight: 500;
cursor: pointer;
display: flex;
align-items: center;
justify-content: center;
gap: 8px;
transition: background-color 0.2s;
margin-top: 15px;
}

.send-reply-btn:hover {
background-color: #1a1a1a;
}

.send-reply-btn svg {
width: 16px;
height: 16px;
}

@media (max-width: 992px) {
.doubt-stats-container {
grid-template-columns: 1fr; 
}
.doubt-item {
flex-direction: column;
align-items: flex-start;
}
.doubt-content {
margin-bottom: 16px;
margin-right: 0;
}
.doubt-actions {
flex-direction: row;
width: 100%;
justify-content: space-between;
}
.doubts-list-container {
max-height: 70vh; 
}
}

@media (max-width: 576px) {
.page-title {
font-size: 40px;
}
.doubt-meta {
flex-direction: column;
gap: 4px;
}
.meta-value {
margin-right: 0;
}
.modal-dialog {
width: 95%;
}
.student-info-row {
flex-direction: column;
align-items: flex-start;
gap: 8px;
}
}
  </style>
</head>
<body>
  <!-- NAVBAR -->
  <nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
      <a class="navbar-brand" href="/dash">ShikshNet</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="nav navbar-nav mx-auto">
          <li class="nav-item"><a class="nav-link" href="/dash">Dashboard</a></li>
          <li class="nav-item"><a class="nav-link" href="/courses">Courses</a></li>
          <li class="nav-item"><a class="nav-link" href="/class">Classes</a></li>
          <li class="nav-item"><a class="nav-link" href="/test">Tests</a></li>
          <li class="nav-item"><a class="nav-link" href="/info">Information</a></li>
        </ul>
        <div class="profile-section">
          <span><%= teacher ? teacher.username : 'Teacher' %></span>
          <div class="profile-icon"></div>
        </div>
      </div>
    </div>
  </nav>

  <!-- MAIN -->
  <main class="main">
    <div class="container">
      <div class="page-header">
        <h1 class="page-title">Student Doubts</h1>
        <p class="page-description">Manage and resolve student questions</p>
      </div>

      <div class="doubt-stats-container">
        <div class="stat-card orange-border">
          <div class="stat-card-header">
            <span class="stat-label">Pending</span>
            <div class="icon-placeholder orange-bg"></div>
          </div>
          <div class="stat-value">
            <% const pendingCount = doubts ? doubts.filter(d => d.status === 'pending').length : 0; %>
            <%= pendingCount %>
          </div>
        </div>

        <div class="stat-card orange-border">
          <div class="stat-card-header">
            <span class="stat-label">In Progress</span>
            <div class="icon-placeholder orange-bg"></div>
          </div>
          <div class="stat-value">
            <% const inProgressCount = doubts ? doubts.filter(d => d.status === 'in_progress').length : 0; %>
            <%= inProgressCount %>
          </div>
        </div>

        <div class="stat-card green-border">
          <div class="stat-card-header">
            <span class="stat-label">Resolved</span>
            <div class="icon-placeholder green-bg"></div>
          </div>
          <div class="stat-value">
            <% const resolvedCount = doubts ? doubts.filter(d => d.status === 'resolved').length : 0; %>
            <%= resolvedCount %>
          </div>
        </div>
      </div>

      <div class="doubts-list-container">
        <% if (doubts && doubts.length > 0) { %>
          <% doubts.forEach(doubt => { %>
            <div class="doubt-item <%= doubt.status === 'pending' ? '' : doubt.status === 'in_progress' ? 'in-progress-item' : 'resolved-item' %>">
              <div class="doubt-content">
                <h3 class="doubt-title"><%= doubt.doubtTitle %></h3>
                <p class="doubt-text"><%= doubt.doubtDescription %></p>
                <div class="doubt-meta">
                  <span class="meta-label">Student:</span><span class="meta-value"><%= doubt.studentName %></span>
                  <span class="meta-label">Subject:</span><span class="meta-value"><%= doubt.subject %></span>
                  <span class="meta-label">Course:</span><span class="meta-value"><%= doubt.courseName %></span>
                  <span class="meta-label">Priority:</span><span class="meta-value"><%= doubt.priority %></span>
                  <span class="meta-label">Type:</span><span class="meta-value"><%= doubt.doubtType %></span>
                </div>
                <% if (doubt.teacherResponse) { %>
                  <div class="teacher-response">
                    <strong>Teacher Response:</strong>
                    <p><%= doubt.teacherResponse %></p>
                    <small>Responded on: <%= new Date(doubt.responseDate).toLocaleDateString() %></small>
                  </div>
                <% } %>
              </div>
              <div class="doubt-actions">
                <span class="status-tag <%= doubt.status === 'pending' ? 'pending-tag' : doubt.status === 'in_progress' ? 'in-progress-tag' : 'resolved-tag' %>">
                  <%= doubt.status.charAt(0).toUpperCase() + doubt.status.slice(1).replace('_', ' ') %>
                </span>
                <button class="btn view-details-btn" onclick="openDoubtModal('<%= doubt._id %>')">View Details</button>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div style="text-align:center; padding:40px;">
            <h3>No doubts found</h3>
            <p>Students haven't asked any questions yet.</p>
          </div>
        <% } %>
      </div>
    </div>
  </main>

  <!-- 🔥 REPLACED MODAL SECTION -->
  <div class="modal-overlay" id="modalOverlay" style="display:none;">
    <div class="modal-dialog" id="modalDialog">
      <div class="modal-header">
        <h2 id="modal-title">Doubt Details</h2>
        <button class="close-btn" onclick="closeModal()">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>

      <div class="modal-body">
        <div class="student-info-row">
          <div class="student-info">
            <span class="info-label-inline">Student:</span>
            <span class="info-value-inline" id="modal-student"></span>
          </div>
          <div class="class-info">
            <span class="info-label-inline">Class:</span>
            <span class="info-value-inline" id="modal-class"></span>
          </div>
        </div>

        <div class="subject-section">
          <span class="subject-label">Subject:</span>
          <span class="subject-value" id="modal-subject"></span>
        </div>

        <div class="description-card">
          <span class="description-label">Question:</span>
          <p class="description-text" id="modal-question"></p>
        </div>

        <div class="line-div"></div>

        <div id="modal-response-wrapper">
          <div id="modal-existing-response" style="display:none;">
            <label class="reply-label">Your Response:</label>
            <p id="modal-response-text" class="reply-input"></p>
            <small id="modal-response-date"></small>
          </div>

          <div id="modal-response-form">
            <label class="reply-label" for="replyInput">Your Reply</label>
            <textarea class="reply-input" id="replyInput" placeholder="Type your response here..."></textarea>

            <select id="replyStatus">
              <option value="in_progress">Mark as In Progress</option>
              <option value="resolved">Mark as Resolved</option>
            </select>

            <button class="send-reply-btn" onclick="sendReply()">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="22" y1="2" x2="11" y2="13"></line>
                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
              </svg>
              Send Reply
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- JS -->
  <script>
    const doubtsData = <%- JSON.stringify(doubts || []) %>;
    let currentDoubtId = null;

    function openDoubtModal(doubtId) {
      const doubt = doubtsData.find(d => d._id === doubtId);
      if (!doubt) return;
      currentDoubtId = doubtId;

      document.getElementById("modal-student").textContent = doubt.studentName || "N/A";
      document.getElementById("modal-class").textContent = doubt.courseName || "N/A";
      document.getElementById("modal-subject").textContent = doubt.subject || "N/A";
      document.getElementById("modal-question").textContent = doubt.doubtDescription || "N/A";

      const hasResponse = !!doubt.teacherResponse;
      const form = document.getElementById("modal-response-form");
      const existing = document.getElementById("modal-existing-response");

      if (hasResponse) {
        form.style.display = "none";
        existing.style.display = "block";
        document.getElementById("modal-response-text").textContent = doubt.teacherResponse;
        document.getElementById("modal-response-date").textContent =
          "Responded on: " + new Date(doubt.responseDate).toLocaleDateString();
      } else {
        form.style.display = "block";
        existing.style.display = "none";
        document.getElementById("replyInput").value = "";
      }

      document.getElementById("modalOverlay").style.display = "flex";
    }

    function closeModal() {
      document.getElementById("modalOverlay").style.display = "none";
    }

    function sendReply() {
      const response = document.getElementById("replyInput").value.trim();
      const status = document.getElementById("replyStatus").value;

      if (!response) {
        alert("Please enter your reply.");
        return;
      }

      fetch("/respond-doubt", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ doubtId: currentDoubtId, response, status })
      })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            alert("Response submitted successfully!");
            closeModal();
            location.reload();
          } else {
            alert("Error: " + data.error);
          }
        })
        .catch(err => {
          console.error(err);
          alert("Error submitting response");
        });
    }

    window.onclick = function (e) {
      const overlay = document.getElementById("modalOverlay");
      if (e.target === overlay) closeModal();
    };
  </script>
   <div id="google_translate_element"></div>
<script type="text/javascript">
  function googleTranslateElementInit() {
    new google.translate.TranslateElement({ pageLanguage: 'en' }, 'google_translate_element');
  }
</script>
<script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
</body>
</html>
